// Importaci√≥n de m√≥dulos y configuraciones necesarias
const swaggerJSDoc = require('swagger-jsdoc');
const config = require('../config'); // Configuraci√≥n personalizada del proyecto

/**
 * @file Configuraci√≥n de Swagger para la documentaci√≥n de la API.
 * Este m√≥dulo configura Swagger para generar la documentaci√≥n de la API,
 * utilizando las variables de entorno para definir la informaci√≥n del servidor,
 * las rutas y otros detalles importantes.
 * 
 * @module swaggerConfig
 */

/**
 * Variables de entorno para configurar Swagger.
 * 
 * - `hostDominio`: Dominio del servidor (por defecto: 'http://localhost').
 * - `basePath`: Ruta base de la API (por defecto: '/api').
 * - `env`: Entorno de ejecuci√≥n (por defecto: 'development').
 * - `title`: T√≠tulo de la aplicaci√≥n (por defecto: 'Sistema General').
 */
const hostDominio = config.url_site;
const basePath = config.base_api;
const env = config.modo_entorno_env;
const title = config.title_app;

/**
 * Definici√≥n de la documentaci√≥n de Swagger con autenticaci√≥n Bearer JWT.
 */
const swaggerDefinition = {
  openapi: '3.0.0',
  info: {
    title: 'Desaf√≠o 2 ‚Äì Pa√≠ses y Capitales: Inteligencia Geogr√°fica',
    version: '1.0.0',
    description: `

Esta API forma parte del **Desaf√≠o 2 ‚Äì Pa√≠ses y Capitales: Inteligencia Geogr√°fica**, desarrollado durante la capacitaci√≥n profesional en Node.js organizada por el Ministerio de Vivienda y Urbanismo.
---

üìå **Objetivo del desaf√≠o**  
Dise√±ar una API que consulte datos de pa√≠ses a trav√©s de la REST Countries API, gestione una lista de favoritos agrupada por regi√≥n, registre b√∫squedas realizadas, aplique seguridad mediante listas negras, y genere un ranking de uso.


---

üîß **Funciones implementadas**  
- Consulta de pa√≠s por nombre ('GET /pais/{nombre}')
- Agregado a favoritos con validaci√≥n ('POST /pais/favorito')
- Eliminaci√≥n de favoritos ('DELETE /pais/favorito/{nombre}')
- Listado agrupado de favoritos por regi√≥n ('GET /pais/favoritos')
- Ranking de pa√≠ses m√°s consultados ('GET /pais/ranking')
- Control por lista negra (middleware)
- Logs estructurados de uso


---

üåê **API externa utilizada:**  
https://restcountries.com

üìÅ **Persistencia local simulada:**  
Archivos JSON por regi√≥n y favoritos

üõ°Ô∏è **Seguridad:**  
Lista negra configurable y validaciones por zona

---

üìÖ **Fecha de entrega:** 16 de Julio de 2025  
üë§ **Desarrolladores: mmamani@minvu.cl, smamanil@minvu.cl
üè¢ **Instituci√≥n:** Ministerio de Vivienda y Urbanismo

## ‚ö†Ô∏è Licencia
**Licencia MIT**
    `,
    contact: {
      name: 'Soporte T√©cnico',
      email: 'eliasalmarza25@gmail.com',
      url: 'https://www.linkedin.com/in/elias-almarza-kackschis/'
    },
    license: {
      name: 'Licencia MIT - Todos los derechos reservados',
      url: 'mailto:eliasalmarza25@gmail.com'
    }
  },
  servers: [
  {
    url: basePath || '/',
    description: `Servidor de ${env} (mismo host)`,
  },
],
  components: {
    securitySchemes: {
      bearerAuth: {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        description: 'Ingrese el token JWT en el formato: Bearer <token>',
      },
    },
  },
  // security: [{ bearerAuth: [] }],
};

/**
 * Opciones de Swagger para leer anotaciones desde los controladores.
 */
const options = {
  swaggerDefinition,
  // apis: ['./src/controllers/*/*.js'], // Cambia seg√∫n c√≥mo tengas agrupado controllers
  apis: ['./src/controllers/pais/paisController.js'] // Solo se incluye el controlador de Pa√≠ses para mostrar exclusivamente esa API en Swagger
};

/**
 * Genera y exporta la especificaci√≥n Swagger.
 * 
 * @type {Object}
 */
const swaggerSpec = swaggerJSDoc(options);
module.exports = swaggerSpec;
